### 認証関連 ###

【ベーシック認証】
ユーザ情報を平文で送るので、盗聴やなりすましのリスクがある。リスクをなくすにはTLSなどで暗号通信をできるようにする。


【チャレンジレスポンス認証】
・ダイジェスト認証(チャレンジとパスワードを掛け合わせた情報でハッシュ値を作る)
・公開鍵証明書による認証
・共通鍵を使った認証


【ワンタイムパスワード】
・S/KEY
サーバーは、クライアントから送られた使い捨てのパスワードを演算し、
サーバーで記憶している、前回の使い捨てパスワードと比較することによってクライアントを認証する。
利用時にhash1ではなく、hash100をOTPとして利用するのは、一方向性の特性によりhash100からそれ以前のハッシュ値を算出する事は困難なため。

・HOTP
HMACを利用して、ワンタイムパスワードを生成する方法

※HMACは(秘密の情報+入力値)×ハッシュ関数で作る情報

・TOTP
時刻情報を利用して、ワンタイムパスワードを生成する方法


【パスワード管理】
・サーバのパスワードファイルで管理
・LDAPなどのディレクトリサービスで管理


【シングルサインオン】
認証のワンストップサービス
代表的な方法は
・リバースプロキシを利用
　httpやhttpsを代理するので、
　WebAppである必要がある。
・ケルベロス認証を利用
　ケルベロスサーバはユーザー認証を行ってTGTを作る。TGTを使ってTGSへアクセスして、TGSでサービスチケットを作ってもらう。
　TGSで対象サーバを利用できるようになる。
　ケルベロスサーバとTGSで信頼関係を結んでおく必要があり、信頼関係の範囲をレルムと呼ぶ。
・SAMLを利用
　アサーションという認証情報をやりとりして認証を行う。
　アサーションはIDプロバイダーによって発行される。アサーションを利用すると、ウェブサーバーにアクセスできるようになる。


【メッセージ認証】
・メッセージ認証符号(MAC、メッセージ認証子)
メッセージ認証符号を確認することでデータの改ざん有無を確認できる。
本人確認はできない。
デジタル署名なら本人確認も改ざん確認もできる。

・デジタル署名
秘密鍵で暗号して、公開鍵で復号する。
本人確認も改ざん確認もできるが、PKIを整える必要がある。

署名の付与方法は
CMS(S/MIMEやPDFの書名に使われることが多い、バイナリ形式で、Webとは相性悪い)、
XML署名(XMLファイルが対象、テキスト形式でWebと相性良い)

・XML署名
分離署名、包含署名、内包署名


【タイムスタンプ】
保証できることは
・タイムスタンプの日時に、文章が確実に存在していたこと

・タイムスタンプの日時以降に作成者も含めて改ざんされていないこと

・TSA
タイムスタンプを発行する時刻認証局


【その他用語】
・IAM(Identity and Access Management)
識別・認証された利用者が、許可されている権限お範囲内で利用できるように
制御する「アクセスコントロール」を実現するシステム。
ゼロトラストの考え方が主流になりつつある昨今では、クラウドサービスとして提供されるIDaas(Identity as a Service)
が求められるようになってきた。

・プロビジョニング機能
他のシステムと連携してアカウントを生成したり、ライセンスやサービスを割り当てたりする機能。

・AAAフレームワーク
アクセスコントロールの際に必要となる構成要素を、RFC2904ではAAAフレームワークとして規定している。
AAAは認証(Authentication)、認可(Authorization)、アカウンティング(Accounting)のそれぞれの
頭文字をとったもの。

・IEEE802.1X
認証フレーム。
サプリカントは認証を受けるソフトウェア
↓EAP
オーセンティケータは認証要求を受ける機器
↓RADIUS
認証サーバは認証情報の一元管理

・FIDO(Fast Identity Online)
パスワードを使わずに認証すること。
FIDO2は、事前準備としてクライアント端末は秘密鍵と公開鍵のペアを作成し、
利用したいサービスの認証サーバーに公開鍵路ユーザIDを登録。
サービス利用時にサーバはクライアントにチャレンジコードを送る。
クライアントは生体認証を行い、認証を完了させる。
秘密鍵を使ってチェレンジコードにデジタル署名を行い、認証サーバに送る。
認証サーバはクライアントの公開鍵を使ってデジタル署名を検証する。
パスワードなどの認証情報がネットワークを流れず、利便性が高い方式として普及が進んでいる。
WebAuthnとCTAPという二つの仕様でできている。
