### 認可関連 ###

認可の大原則は
・職務分離
・最小権限

【セキュアOS】
OSでアクセス権制御する。
・DAC（任意アクセス制御）
  →ファイル作成者がアクセス権制御をできる。
・MAC（強制アクセス制御）
  →ファイル作成者がアクセス権制御をできない。
   セキュリティ管理者によるセキュリティポリシーによって
   アクセス制御される。

【アクセス権の設定方法】
・ラベル別アクセス制御
リソースにラベルをつけて、ラベル単位でアクセス権の設定を行う。

・ロールベースアクセス制御
ロールを定義し、ロール単位でアクセス権の設定を行う。


【OAuth】
Webサービス間で情報連携を可能にする認可プロトコル。

・stateパラメタ
CSRF対策。
認可リクエスト時にstateを生成し認可サーバーへ送る。
認可サーバーはクライアントに認可コードを渡す際、
リクエストで送られてきたstateも渡すようにする。
クライアントはstateがリクエスト時の値と一致しない、
もしくは渡されてこなかった場合にトークンリクエストを行わないようにする。

・nonce
OpenID Connect由来のパラメーターで、守りたいものはID Token。
リプレイ攻撃（ログイン時に送られるデータを攻撃者が記録し、それをそのまま再現することで不正にログインする）対策。
Authentication Request時にnonceを生成し認証サーバに渡す。
認証サーバはID Tokenの中に渡されたnonceを含める。
クライアントは自らのAuthentication Requestに対してのID Tokenであることを確認するため、
リクエスト時に渡したnonceとID Tokenに含まれるnonceが同一かどうか比較。

・PKCE(Proof Key for Code Exchange)
認可コードを横取り対策する仕組み。
stateの場合、認可後のリダイレクトエンドポイントでクライアントが受け取った「state」を、クライアント側で検証を行う。
対して、PKCEはトークンリクエストで認可コードと共に「code_challenge」を送り、
認可サーバ側で値の検証を行う。