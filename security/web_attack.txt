### Webアプリケーション関連の攻撃 ###

【クロスサイトスクリプティング(XSS)】
脆弱性のある WEB サイトを使って、
ユーザのブラウザで悪意のあるスクリプトを実行させる攻撃。
掲示板サイトやアンケートサイトなどが罠リンクを仕掛ける踏み台として利用される。

＊攻撃方法
攻撃者は掲示板サイトに罠リンクを仕掛けたり、罠リンクを含むメールをターゲットに送信することで、
脆弱性のある WEB サイトに誘導。
リンクには不正なスクリプトが含まれており、罠リンクをクリックしたターゲットは
脆弱性のあるWEB サイトに移動すると同時に不正なスクリプトを実行。
その結果、ターゲットには偽の情報が表示されたり、スクリプトによって
ターゲットのCookieの情報が流出する危険性がある。

XSS による被害が発生した場合, 脆弱な WEB サイトを放置している管理
者の責任が問われる場合がある。

＊対策
・エスケープ処理（WEBサーバ側で意図しないスクリプトを実行しない）
  エスケープ処理とは、HTML で特別な意味をもつ記号を、特別な意味をもたないように変換すること。
  特別な意味をもたない文字に変更することで、無害化 (サニタイジング) できる。

・HTTPレスポンスヘッダのContent-Typeフィールドの文字コードを指定する

・X-XSS-Protection
  反射型XSSを検出した時にページの読み込みを停止

・Content-Security-Policy
  スクリプトの読み込みを許可するドメインをポリシとして指定

・HttpOnly属性
  CookieにHttpOnly属性を設定し、「document.cookie」を用いてアクセスすることを禁止する。

＊DOM-based XSSの対策
・「document.write」や「innerHTML」等のメソッドやプロパティを使わず、
  「createElement」等のDOM操作用のメソッドやプロパティを使うようにする。


【クリックジャッキング攻撃】
iframeなどで透明化したレイヤに標的サイトのコンテンツを重ねて配置し、不正な操作を実行させる攻撃。

＊対策
・Webサイト側がHTTPレスポンスヘッダにX-Frame-Optionを含める
  frameまたはiframeでページを表示する可否を指定する仕組み

・Webサイト側がHTTPレスポンスヘッダにContent-Security-Policyを含める
  frameまたはiframeでページを表示するドメインを限定する仕組み